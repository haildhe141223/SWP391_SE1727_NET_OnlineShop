@model SWP391.OnlineShop.ServiceModel.ViewModels.Cart.OrderViewModel
<style>
	.mt-100 {
		margin-top: 100px;
	}

	.card {
		margin-bottom: 30px;
		border: 0;
		-webkit-transition: all .3s ease;
		transition: all .3s ease;
		letter-spacing: .5px;
		border-radius: 8px;
		-webkit-box-shadow: 1px 5px 24px 0 rgba(68,102,242,.05);
		box-shadow: 1px 5px 24px 0 rgba(68,102,242,.05);
	}

		.card .card-header {
			background-color: #fff;
			border-bottom: none;
			padding: 24px;
			border-bottom: 1px solid #f6f7fb;
			border-top-left-radius: 8px;
			border-top-right-radius: 8px;
		}

	.card-header:first-child {
		border-radius: calc(.25rem - 1px) calc(.25rem - 1px) 0 0;
	}

	.card .card-body {
		padding: 30px;
		background-color: transparent;
	}

</style>
<!-- Start Banner Area -->
<section class="banner-area organic-breadcrumb">
	<div class="container">
		<div class="breadcrumb-banner d-flex flex-wrap align-items-center justify-content-end">
			<div class="col-first">
				<h1>Shopping Cart</h1>
				<nav class="d-flex align-items-center">
					<a href="index.html">Home<span class="lnr lnr-arrow-right"></span></a>
					<a href="category.html">Cart</a>
				</nav>
			</div>
		</div>
	</div>
</section>
<!-- End Banner Area -->
<!--================Cart Area =================-->
@if (Model.OrderDetails != null && Model.OrderDetails.Count > 0)
{
	<section class="cart_area">
		<div class="container">
			<div class="cart_inner">
				<div class="table-responsive">
					<table class="table" id="cart">
						<thead>
							<tr>
								<th scope="col">Product</th>
								<th scope="col">Price</th>
								<th scope="col">Quantity</th>
								<th scope="col">Total</th>
							</tr>
						</thead>
						<tbody>
							@foreach (var item in Model.OrderDetails)
							{
								if (item.Status == SWP391.OnlineShop.Core.Models.Enums.Status.Active)
								{
									<tr>
										<td>
											<div class="media">
												<div class="d-flex">
													<img src="@item.Product?.Thumbnail" alt="" style="max-height: 101.6px;max-width:151.6px">
												</div>
												<div class="media-body">
													<p>@item.Product?.ProductName</p>
												</div>
											</div>
										</td>
										<td>
											<h5 class="price">$ @item.Product?.Price</h5>
										</td>
										<td>
											<div class="product_count">
												<input type="number" name="qty" id="sst" maxlength="12" value="@item.Quantity" min="1" max="@item.Product?.Amount" title="Quantity:"
													   class="qty numberonly" onchange="onQuantityChange(this,@item.Id, @item.Product?.Amount)">
												<button onclick="onAddClick(this, @item.Product?.Amount, @item.Id)"
														class="increase items-count" type="button">
													<i class="lnr lnr-chevron-up"></i>
												</button>
												<button onclick="onMinusClick(this, @item.Id)"
														class="reduced items-count" type="button">
													<i class="lnr lnr-chevron-down"></i>
												</button>
											</div>
										</td>
										<td>
											@if (item.Product?.SalePrice > 0)
											{
												<h5 class="total">$ @(item.Product.SalePrice * item.Quantity)</h5>
											}
											else
											{
												<h5 class="total">$ @(item.Product?.Price * item.Quantity)</h5>
											}

										</td>
									</tr>
								}
							}
							@if (Model.OrderStatus == SWP391.OnlineShop.Core.Models.Enums.OrderStatus.InCartContact)
							{
								<tr class="bottom_button">
									<td>
										<a class="gray_btn" id="update-cart" style="cursor:pointer">Update Cart</a>
									</td>
									<td>
									</td>
									<td>
									</td>
									<td>
										<div class="cupon_text d-flex align-items-center">
											<input type="text" placeholder="Coupon Code">
											<a class="btn primary-btn" href="#">Apply</a>
											<a class="btn gray_btn" href="#">Close Coupon</a>
										</div>
									</td>
								</tr>
								<tr>
									<td>
									</td>
									<td>
									</td>
									<td>
										<h5>Subtotal</h5>
									</td>
									<td>
										<h5 id="sub-total-cost">$ @Model.TotalCost</h5>
									</td>
								</tr>
								<tr class="shipping_area">
									<td>
									</td>
									<td>
									</td>
									<td>
										<h5>Shipping</h5>
									</td>
									<td>
										<div class="shipping_box">
											@*<ul class="list">
									<li><a href="#">Flat Rate: $5.00</a></li>
									<li><a href="#">Free Shipping</a></li>
									<li><a href="#">Flat Rate: $10.00</a></li>
									<li class="active"><a href="#">Local Delivery: $2.00</a></li>
									</ul>*@
											@*<h6>Calculate Shipping <i class="fa fa-caret-down" aria-hidden="true"></i></h6>*@
											@*<select class="shipping_select">
									<option value="1">Bangladesh</option>
									<option value="2">India</option>
									<option value="4">Pakistan</option>
									</select>
									<select class="shipping_select">
									<option value="1">Select a State</option>
									<option value="2">Select a State</option>
									<option value="4">Select a State</option>
									</select>*@
											<input type="text" placeholder="Mobile Phone" id="receiver-phoneNumber" value="@Model.CustomerPhoneNumber">
											<select class="shipping_select" id="province">
												<option value="0">--Province--</option>
												@foreach (var p in Model.Provinces)
												{
													<option value="@p.Id">@p.ProvinceName</option>
												}
											</select>
											<select class="shipping_select" id="ddl-district">
												<option value="0">--District--</option>
											</select>
											<select class="shipping_select" id="ward">
												<option value="0">--Ward--</option>
											</select>
											<input type="text" placeholder="Address" id="receiver-address" value="@Model.CustomerAddress">
											<input type="text" placeholder="Address" id="receiver-address-new" value="">
											<a class="gray_btn" id="update-details-btn">Update Details</a>
											<a class="primary-btn" id="save-details-btn" style="border-radius: 0;top: 14px;height: 40px;">Save</a>
											<a class="gray_btn" id="cancel-save-details-btn" style="border-radius: 0;">Cancel</a>
										</div>
									</td>
								</tr>
							}

							<tr class="out_button_area">
								<td>
								</td>
								<td>
								</td>
								<td>
								</td>
								@if (Model.OrderStatus == SWP391.OnlineShop.Core.Models.Enums.OrderStatus.InCartDetail)
								{
									<td>
										<div class="checkout_btn_inner d-flex align-items-center">
											<a class="gray_btn" asp-action="Index" asp-controller="Home">Continue Shopping</a>
											<a class="primary-btn" id="proceed-check-out-btn">Proceed to checkout</a>
										</div>
									</td>
								}
								else if (Model.OrderStatus == SWP391.OnlineShop.Core.Models.Enums.OrderStatus.InCartContact)
								{
									<td>
										<div class="checkout_btn_inner d-flex align-items-center" style="float: right;">
											<a class="primary-btn" href="#" id="submit-to-cart-completion">Submit</a>
										</div>
									</td>
								}
							</tr>

						</tbody>
					</table>
				</div>
			</div>
		</div>
	</section>
}
else
{
	<div class="container-fluid  mt-100 empty-cart">
		<div class="row">
			<div class="col-md-12">
				<div class="card">
					<div class="card-body cart">
						<div class="col-sm-12 empty-cart-cls text-center">
							<img src="https://i.imgur.com/dCdflKN.png" width="130" height="130" class="img-fluid mb-4 mr-3">
							<h3><strong>Your Cart is Empty</strong></h3>
							<h4>Add something to make me happy :)</h4>
							<a asp-action="Index" asp-controller="Home" class="btn btn-warning cart-btn-transform m-3"
			 style="color: white;"
			 data-abc="true">continue shopping</a>
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>
}

<!--================End Cart Area =================-->
<script type="text/javascript">

	$(document).ready(function () {
		$('select[id="province"]').niceSelect('destroy');
		$('select[id="ward"]').niceSelect('destroy');
		$('select[id="ddl-district"]').niceSelect('destroy'); //destroy the plugin
		var phoneNum = $('#receiver-phoneNumber');
		var address = $('#receiver-address');
		var saveBtn = $('#save-details-btn');
		var cancelBtn = $('#cancel-save-details-btn');
		if (phoneNum != undefined) {
			phoneNum.prop('disabled', true);
		}
		if (address != undefined) {
			address.prop('disabled', true);
		}
		if (saveBtn != undefined) {
			saveBtn.hide();
		}
		if (cancelBtn != undefined) {
			cancelBtn.hide();
		}
		$('select[id="province"]').hide();
		$('select[id="ward"]').hide();
		$('select[id="ddl-district"]').hide();
		$('#receiver-address-new').hide();
	});

	if ('@Model.OrderStatus' != 'InCartDetail') {
		$('#cart').find('*').prop('disabled', true)
	}

	$('#update-details-btn').click(function () {
		$('#receiver-address').hide();
		$('#receiver-address-new').show();
		$('#save-details-btn').show();
		$(this).hide()
		$('select[id="province"]').show();
		$('select[id="ward"]').show();
		$('select[id="ddl-district"]').show();
		$('#cancel-save-details-btn').show();
	});

	$('#save-details-btn').click(function () {
		var province = $('select[id="province"] option:selected').val();
		var district = $('select[id="ddl-district"] option:selected').val();
		var ward = $('select[id="ward"] option:selected').val();
		if (province.trim() == 0 || province == null) {
			alert("Please choose Province");
			return false;
		}
		if (district.trim() == 0 || district == null) {
			alert("Please choose District");
			return false;
		}
		if (ward.trim() == 0 || ward == null) {
			alert("Please choose Ward");
			return false;
		}
		let provinceName = $('select[id="province"] option:selected').text();
		let districtName = $('select[id="ddl-district"] option:selected').text();
		let wardName = $('select[id="ward"] option:selected').text();
		var address = `${wardName}, ${districtName}, ${provinceName}`;
		$('#receiver-address-new').val(address);
		/*$.ajax({
			type: "POSE",
			url: "@Url.Action("UpdateAddress", "Cart")",
			data: { id : @Model.AddressId, fullAddress : address },
			success: function (response) {
				$('#receiver-address').val(address);
				$('#receiver-address').show();
				$('#receiver-address-new').hide();
			},
			failure: function (failed) {
				$.toaster({ priority: 'warning', title: 'Warning', message: failed.responseText });
			},
			error: function (error) {
				$.toaster({ priority: 'danger', title: 'Error', message: error.responseText });
			}
		});*/
		$('#receiver-address').val(address);
		$('#receiver-address').show();
		$('#receiver-address-new').hide();
		$('#update-details-btn').show();
		$('select[id="province"]').hide();
		$('select[id="ward"]').hide();
		$('select[id="ddl-district"]').hide();
		$(this).hide();
		$('#cancel-save-details-btn').hide();
	});

	$('#cancel-save-details-btn').click(function () {
		$('#update-details-btn').show();
		$('select[id="province"]').hide();
		$('select[id="ward"]').hide();
		$('select[id="ddl-district"]').hide();
		$(this).hide();
		$('#save-details-btn').hide();
		$('#receiver-address').show();
		$('#receiver-address-new').hide();
	});

	$("select[id=province]").change(function () {
		var value = $(this).val();
		$('select[id="ddl-district"]').empty();
		$('select[id="ddl-district"]').append($('<option>', {
			value: 0,
			text: "--District--"
		}));
		$('select[id="ward"]').empty();
		$('select[id="ward"]').append($('<option>', {
			value: 0,
			text: '--Ward--'
		}));
		$.ajax({
			type: "GET",
			url: "@Url.Action("GetDistrictByProvince", "Cart")",
			data: { provinceId: value },
			success: function (response) {
				for (let district of response) {
					$('select[id="ddl-district"]').append($('<option>', {
						value: district.id,
						text: district.districtName
					}));
				}
			},
			failure: function (failed) {
				alert(failed.responseText)
				//$.toaster({ priority: 'warning', title: 'Warning', message: failed.responseText });
			},
			error: function (error) {
				alert(error.responseText)
				//$.toaster({ priority: 'danger', title: 'Error', message: error.responseText });
			}
		});
	});

	$('select[id="ddl-district"]').change(function () {
		var value = $(this).val();
		$('select[id="ward"]').empty();
		$('select[id="ward"]').append($('<option>', {
			value: 0,
			text: '--Ward--'
		}));
		$.ajax({
			type: "GET",
			url: "@Url.Action("GetWardByDistrict", "Cart")",
			data: { districtId: value },
			success: function (response) {
				console.log(response);
				for (let ward of response) {
					$('select[id="ward"]').append($('<option>', {
						value: ward.id,
						text: ward.wardName
					}));
				}
			},
			failure: function (failed) {
				alert(failed.responseText)
				//$.toaster({ priority: 'warning', title: 'Warning', message: failed.responseText });
			},
			error: function (error) {
				alert(error.responseText)
				//$.toaster({ priority: 'danger', title: 'Error', message: error.responseText });
			}
		});
	});

	$('#update-cart').click(function(e) {
		if (!e.detail || e.detail == 1) {
			const data = {
				orderId: @Model.Id,
				total: $("#sub-total-cost").text().split(' ')[1]
			};
			$.ajax({
				url: '@Url.Action("UpdateCart","Cart")',
				type: 'POST',
				data: data,
				success: function (response) {
					alert('Back To Cart Detail Succesfully');
					//$.toaster({ priority: 'success', title: 'Created', message: "Back To Cart Detail Succesfully" });
					setTimeout(function () {
						window.location.reload();
					}, 1000);
				},
				failure: function (failed) {
					alert(failed.responseText)
					//$.toaster({ priority: 'warning', title: 'Warning', message: failed.responseText });
				},
				error: function (error) {
					alert(error.responseText)
					//$.toaster({ priority: 'danger', title: 'Error', message: error.responseText });
				}
			});
		}
	});

	function onMinusClick(event, orderDetailId) {
		var stringQ = $(event).closest("tr").find("input[name='qty']").val();
		var quantity = Number(stringQ);
		var newQuantity = quantity - 1;
		if (quantity == 1) {
			if (confirmDelete("Are you sure you want to remove this item from cart?")) {
				$.ajax({
					type: "POST",
					url: "@Url.Action("DeleteOrderDetail", "Cart")",
					data: { id: orderDetailId, quantity: newQuantity },
					success: function (response) {
						if (@Model.OrderDetails?.Count == 1) {
							setTimeout(function () {
								window.location.reload();
							}, 1000);
						} else {
							alert("Delete Cart Item Succesfully");
							//$.toaster({ priority: 'success', title: 'Success', message: "Delete Cart Item Succesfully" });
							$(event).closest("tr").remove();
						}
					},
					failure: function (failed) {
						alert(failed.responseText)
						//$.toaster({ priority: 'warning', title: 'Warning', message: failed.responseText });
					},
					error: function (error) {
						alert(error.responseText)
						//$.toaster({ priority: 'danger', title: 'Error', message: error.responseText });
					}
				});
			}
		} else {
			$.ajax({
				type: "POST",
				url: "@Url.Action("UpdateQuantity", "Cart")",
				data: { id: orderDetailId, quantity: newQuantity },
				success: function (response) {
					$(event).closest("tr").find("input[name='qty']").val(newQuantity);
					var price = Number($(event).closest("tr").find("h5.price").text().split(' ')[1]);
					var total = Number.parseFloat(price * newQuantity).toFixed(2);
					$(event).closest("tr").find("h5.total").text("$ " + total);
				},
				failure: function (failed) {
					alert(failed.responseText)
					//$.toaster({ priority: 'warning', title: 'Warning', message: failed.responseText });
				},
				error: function (error) {
					alert(error.responseText)
					//$.toaster({ priority: 'danger', title: 'Error', message: error.responseText });
				}
			});
		}
	}

	function onAddClick(event, max, orderDetailId) {
		var stringQ = $(event).closest("tr").find("input[name='qty']").val();
		var quantity = Number(stringQ);
		var newQuantity = quantity + 1;
		if (newQuantity > max) {
			alert("There not enough item in the store")
			//$.toaster({ priority: 'warning', title: 'Warning', message: "There not enough item in the store" });
			return false;
		}
		$.ajax({
			type: "POST",
			url: "@Url.Action("UpdateQuantity", "Cart")",
			data: { id: orderDetailId, quantity: newQuantity },
			success: function (response) {
				$(event).closest("tr").find("input[name='qty']").val(newQuantity);
				var price = Number($(event).closest("tr").find("h5.price").text().split(' ')[1]);
				var total = Number.parseFloat(price * newQuantity).toFixed(2);
				$(event).closest("tr").find("h5.total").text("$ " + total);
			},
			failure: function (failed) {
				alert(failed.responseText)
				//$.toaster({ priority: 'warning', title: 'Warning', message: failed.responseText });
			},
			error: function (error) {
				alert(error.responseText)
				//$.toaster({ priority: 'danger', title: 'Error', message: error.responseText });
			}
		});
	}

	function onQuantityChange(event, orderDetailId, max) {
		var newQuantity = Number(event.value);
		if (newQuantity > max) {
			alert('There not enough item in the store')
			//$.toaster({ priority: 'warning', title: 'Warning', message: "There not enough item in the store" });
			return false;
		} else if (newQuantity < 0) {
			alert("Please enter a positive number")
			//$.toaster({ priority: 'warning', title: 'Warning', message: "Please enter a positive number" });
			return false;
		} else if (newQuantity == 0) {
			if (confirmDelete("Changing to '0' means you will remove this item from cart? Are you sure?")) {
				$.ajax({
					type: "POST",
					url: "@Url.Action("DeleteOrderDetail", "Cart")",
					data: { id: orderDetailId, quantity: newQuantity },
					success: function (response) {
						if (@Model.OrderDetails?.Count == 1) {
							setTimeout(function () {
								window.location.reload();
							}, 1000);
						} else {
							alert("Delete Cart Item Succesfully")
							//$.toaster({ priority: 'success', title: 'Success', message: "Delete Cart Item Succesfully" });
							$(event).closest("tr").remove();
						}
					},
					failure: function (failed) {
						alert(error.responseText)
						//$.toaster({ priority: 'warning', title: 'Warning', message: failed.responseText });
					},
					error: function (error) {
						alert(error.responseText)
						//$.toaster({ priority: 'danger', title: 'Error', message: error.responseText });
					}
				});
			}
		} else {
			$.ajax({
				type: "POST",
				url: "@Url.Action("UpdateQuantity", "Cart")",
				data: { id: orderDetailId, quantity: newQuantity },
				success: function (response) {
					$(event).closest("tr").find("input[name='qty']").val(newQuantity);
					var price = Number($(event).closest("tr").find("h5.price").text().split(' ')[1]);
					var total = Number.parseFloat(price * newQuantity).toFixed(2);
					$(event).closest("tr").find("h5.total").text("$ " + total);
				},
				failure: function (failed) {
					alert(error.responseText)
					//$.toaster({ priority: 'warning', title: 'Warning', message: failed.responseText });
				},
				error: function (error) {
					alert(error.responseText)
					//$.toaster({ priority: 'danger', title: 'Error', message: error.responseText });
				}
			});
		}
	}

	function confirmDelete(message) {
		if (message == '' || message == null || message == undefined) {
			message = "Are you sure you want to delete this item?";
		}
		return confirm(message);
	}

	$('.numberonly').on("input", function (evt) {
		var self = $(this);
		self.val(self.val().replace(/[^0-9\.]/g, ''));
		if ((evt.which != 46 || self.val().indexOf('.') != -1) && (evt.which < 48 || evt.which > 57)) {
			evt.preventDefault();
		}
	});

	var proceedCheckoutButton = $('#proceed-check-out-btn');
	if (proceedCheckoutButton != undefined) {
		$(proceedCheckoutButton).click(function (e) {
			if (!e.detail || e.detail == 1) {
				const data = {
					orderId: @Model.Id
					};
				$.ajax({
					url: '@Url.Action("ProcessToCheckout","Cart")',
					type: 'POST',
					data: data,
					success: function (response) {
						alert("Add To Cart Contact Succesfully");
						//$.toaster({ priority: 'success', title: 'Created', message: "Add To Cart Contact Succesfully" });
						setTimeout(function () {
							window.location.reload();
						}, 1000);
					},
					failure: function (failed) {
						//$.toaster({ priority: 'warning', title: 'Warning', message: failed.responseText });
					},
					error: function (error) {
						//$.toaster({ priority: 'danger', title: 'Error', message: error.responseText });
					}
				});
			}
		});
	}

	$('#submit-to-cart-completion').click(function(e){
		if (!e.detail || e.detail == 1) {
			const data = {
				orderId: @Model.Id,
				total: $("#sub-total-cost").text().split(' ')[1],
				address: $('#receiver-address').val(),
			};
			$.ajax({
				url: '@Url.Action("UpdateCartToComplete","Cart")',
				type: 'POST',
				data: data,
				success: function (response) {
					alert('Back To Cart Complete Succesfully');
					//$.toaster({ priority: 'success', title: 'Created', message: "Back To Cart Detail Succesfully" });
					setTimeout(function () {
						window.location.reload();
					}, 1000);
				},
				failure: function (failed) {
					alert(failed.responseText)
					//$.toaster({ priority: 'warning', title: 'Warning', message: failed.responseText });
				},
				error: function (error) {
					alert(error.responseText)
					//$.toaster({ priority: 'danger', title: 'Error', message: error.responseText });
				}
			});
		}
	});
</script>