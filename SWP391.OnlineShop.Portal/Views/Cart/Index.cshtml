@model List<SWP391.OnlineShop.ServiceModel.ViewModels.Carts.OrderViewModels>
@{
	var sliders = TempData["slider"] as List<SWP391.OnlineShop.ServiceModel.ViewModels.Products.ProductViewModel>;
}
<style>
	.mt-100 {
		margin-top: 100px;
	}

	.card {
		margin-bottom: 30px;
		border: 0;
		-webkit-transition: all .3s ease;
		transition: all .3s ease;
		letter-spacing: .5px;
		border-radius: 8px;
		-webkit-box-shadow: 1px 5px 24px 0 rgba(68,102,242,.05);
		box-shadow: 1px 5px 24px 0 rgba(68,102,242,.05);
	}

		.card .card-header {
			background-color: #fff;
			border-bottom: none;
			padding: 24px;
			border-bottom: 1px solid #f6f7fb;
			border-top-left-radius: 8px;
			border-top-right-radius: 8px;
		}

	.card-header:first-child {
		border-radius: calc(.25rem - 1px) calc(.25rem - 1px) 0 0;
	}

	.card .card-body {
		padding: 30px;
		background-color: transparent;
	}

</style>
<!-- Start Banner Area -->
<section class="banner-area organic-breadcrumb">
	<div class="container">
		<div class="breadcrumb-banner d-flex flex-wrap align-items-center justify-content-end">
			<div class="col-first">
				<h1>Shopping Cart</h1>
				<nav class="d-flex align-items-center">
					<a asp-action="Index" asp-controller="Home">Home<span class="lnr lnr-arrow-right"></span></a>
					<a href="category.html">Cart</a>
				</nav>
			</div>
		</div>
	</div>
</section>
<!-- End Banner Area -->
<!--================Cart Area =================-->
@if (Model.Count > 0)
{
	foreach (var order in Model)
	{
		if (order.OrderDetails is { Count: > 0 })
		{
			if (order.OrderStatus == SWP391.OnlineShop.Core.Models.Enums.OrderStatus.InCartDetail)
			{
				<section class="cart_area">
					<div class="container">
						<div class="cart_inner">
							<div class="table-responsive">
								<table class="table" id="cart">
									<thead>
										<tr>
											<th scope="col">Product</th>
											<th scope="col">Price</th>
											<th scope="col">Quantity</th>
											<th scope="col">Total</th>
										</tr>
									</thead>
									<tbody>
										@foreach (var item in order.OrderDetails)
										{
											if (item.Status == SWP391.OnlineShop.Core.Models.Enums.Status.Active)
											{
												<tr class="cart-item">
													<td>
														<div class="media">
															<div class="d-flex">
																<img src="@item.Product?.Thumbnail" alt="" style="max-height: 101.6px;max-width:151.6px">
															</div>
															<div class="media-body">
																<a asp-action="Details" asp-controller="Product" asp-route-id="@item.Product?.Id"><p>@item.Product?.ProductName</p></a>
															</div>
														</div>
													</td>
													<td>
														@if (item.Product?.SalePrice > 0)
														{
															<h5 class="price">$ @item.Product?.SalePrice</h5>
														}
														else
														{
															<h5 class="price">$ @item.Product?.Price</h5>
														}
													</td>
													<td>
														<div class="product_count">
															<input type="number" name="qty" id="sst" maxlength="12" value="@item.Quantity" min="1" max="@item.Product?.ProductSizes.FirstOrDefault()?.Quantity" title="Quantity:"
																   class="qty numberonly" onchange="onQuantityChange(this,@item.Id, @item.Product?.ProductSizes.FirstOrDefault()?.Quantity,@order.OrderDetails.Count)">
															<button onclick="onAddClick(this, @item.Product?.ProductSizes.FirstOrDefault()?.Quantity, @item.Id)"
																	class="increase items-count" type="button">
																<i class="lnr lnr-chevron-up"></i>
															</button>
															<button onclick="onMinusClick(this, @item.Id,@order.OrderDetails.Count)"
																	class="reduced items-count" type="button">
																<i class="lnr lnr-chevron-down"></i>
															</button>
														</div>
													</td>
													<td>
														@if (item.Product?.SalePrice > 0)
														{
															<h5 class="total">
																$ @(
																		item.Product.SalePrice * item.Quantity
																		)
															</h5>
														}
														else
														{
															<h5 class="total">
																$ @(
																		item.Product?.Price * item.Quantity
																		)
															</h5>
														}

													</td>
												</tr>
											}
										}
										<tr class="out_button_area">
											<td>
											</td>
											<td>
											</td>
											<td>
											</td>
											<td>
												<div class="checkout_btn_inner d-flex align-items-center">
													<a class="gray_btn" asp-action="Index" asp-controller="Home">Continue Shopping</a>
													<a class="primary-btn" id="proceed-check-out-btn-@order.Id" onclick="ProceedToCheckOut(@order.Id)">Proceed to checkout</a>
												</div>
											</td>
										</tr>
									</tbody>
								</table>
							</div>
						</div>
					</div>
				</section>
			}
			else if (order.OrderStatus == SWP391.OnlineShop.Core.Models.Enums.OrderStatus.InCartContact)
			{
				@foreach (var detail in order.OrderDetails)
				{
					<div class="row">
						<div class="col-xxl-8 col-12">
							<!-- card -->
							<div class="card" style=" width: 100%; margin-left: 22%;">
								<!-- card body-->
								<div class="card-body">
									<div class="mb-6">
										<div class="mb-8">
											<div class="row justify-content-between align-items-center">
												<!-- col -->

												<div class="col-lg-8 col-12">
													<div class="d-md-flex">
														<div>
															<!-- img -->
															<img src="@detail.Product.Thumbnail" style="max-height: 101.6px;max-width:151.6px" alt="" class="img-4by3-xl rounded">
														</div>
														<div class="ms-md-4 mt-2 mt-lg-0">
															<!-- heading -->
															<h5 class="mb-1">
																@detail.Product.ProductName
															</h5>
															<!-- text -->
															<span>
																Quantity:<span class="text-dark"> @detail.Quantity</span>
															</span>
															<!-- text -->
															<div class="mt-3">
																<h4>$ @detail.UnitPrice</h4>
															</div>
														</div>
													</div>
												</div>
												<!-- button -->
												<div class="col-lg-3 col-12 d-grid">
													<a class="btn btn-primary" style="background-color:#FFBA00" asp-action="CartContact" asp-controller="Cart" asp-route-id="@order.Id">Continue Buying</a>
													<a class="btn btn-primary" style="background-color: #e8f0f2" onclick="cancelCart(@order.Id)">Cancel Cart</a>
												</div>
											</div>
										</div>
									</div>
								</div>
							</div>
						</div>
					</div>
				}
			}
			else
			{
				@foreach (var detail in order.OrderDetails)
				{
					<div class="row">
						<div class="col-xxl-8 col-12">
							<!-- card -->
							<div class="card" style=" width: 100%; margin-left: 22%;">
								<!-- card body-->
								<div class="card-body">
									<div class="mb-6">
										<div class="mb-8">
											<div class="row justify-content-between align-items-center">
												<!-- col -->
												<div class="col-lg-8 col-12">
													<div class="d-md-flex">
														<div>
															<!-- img -->
															<img src="@detail.Product.Thumbnail" style="max-height: 101.6px;max-width:151.6px" alt="" class="img-4by3-xl rounded">
														</div>
														<div class="ms-md-4 mt-2 mt-lg-0">
															<!-- heading -->
															<h5 class="mb-1">
																@detail.Product.ProductName
															</h5>
															<!-- text -->
															<span>
																Quantity:<span class="text-dark"> @detail.Quantity</span>
															</span>
															<!-- text -->
															<div class="mt-3">
																<h4>$ @detail.UnitPrice</h4>
															</div>
														</div>
													</div>
												</div>
												<!-- button -->
												<div class="col-lg-3 col-12 d-grid">
													<a class="btn btn-primary" style="background-color:#FFBA00" asp-action="Checkout" asp-controller="Cart" asp-route-id="@order.Id">Continue Checkout</a>
													<a class="btn btn-primary" style="background-color: #e8f0f2" onclick="cancelCart(@order.Id)">Cancel Cart</a>
												</div>
											</div>
										</div>
									</div>
								</div>
							</div>
						</div>
					</div>
				}
			}
		}
	}
}
else
{
	<div class="container-fluid  mt-100 empty-cart">
		<div class="row">
			<div class="col-md-12">
				<div class="card">
					<div class="card-body cart">
						<div class="col-sm-12 empty-cart-cls text-center">
							<img src="https://i.imgur.com/dCdflKN.png" width="130" height="130" class="img-fluid mb-4 mr-3">
							<h3><strong>Your Cart is Empty</strong></h3>
							<h4>Add something to make me happy :)</h4>
							<a asp-action="Index" asp-controller="Home" class="btn btn-warning cart-btn-transform m-3"
			 style="color: white;"
			 data-abc="true">continue shopping</a>
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>
}
<section class="owl-carousel active-product-area section_gap">
	<!-- single product slide -->
	<div class="single-product-slider">
		<div class="container">
			<div class="row justify-content-center">
				<div class="col-lg-6 text-center">
					<div class="section-title">
						<h1>Latest Products</h1>
						<p>
							Latest Products Of All Category
						</p>
					</div>
				</div>
			</div>
			<div class="row">
				@if (sliders != null)
				{
					for (int i = 0; i < sliders.Count() / 2; i++)
					{
						<!-- single product -->
						<div class="col-lg-3 col-md-6">
							<div class="single-product">
								<a asp-action="Details" asp-controller="Product" asp-route-id="@sliders[i].Id"><img class="img-fluid" src="@sliders[i].Thumbnail" alt="@sliders[i].ProductName"></a>
								<div class="product-details">
									<h6>
										<a asp-action="Details" asp-controller="Product" asp-route-id="@sliders[i].Id">@sliders[i].ProductName</a>
									</h6>
									<div class="price">
										<h6>$ @sliders[i].Price</h6>
										@if (sliders[i].SalePrice > 0)
										{
											<h6 class="l-through">$ @sliders[i].SalePrice</h6>
										}
									</div>
									<div class="prd-bottom">
										<a href="" class="social-info">
											<span class="lnr lnr-heart"></span>
											<p class="hover-text">WishList</p>
										</a>
										<a href="" class="social-info">
											<span class="lnr lnr-sync"></span>
											<p class="hover-text">compare</p>
										</a>
										<a href="" class="social-info">
											<span class="lnr lnr-move"></span>
											<p class="hover-text">view more</p>
										</a>
									</div>
								</div>
							</div>
						</div>
					}
				}
			</div>
		</div>
	</div>
	<!-- single product slide -->
	<div class="single-product-slider">
		<div class="container">
			<div class="row justify-content-center">
				<div class="col-lg-6 text-center">
					<div class="section-title">
						<h1>Latest Products</h1>
						<p>
							Latest Products Of All Category
						</p>
					</div>
				</div>
			</div>
			<div class="row">
				<!-- single product -->
				@if (sliders != null)
				{
					@for (int i = sliders.Count() / 2; i < sliders.Count(); i++)
					{
						<!-- single product -->
						<div class="col-lg-3 col-md-6">
							<div class="single-product">
								<a asp-action="Details" asp-controller="Product" asp-route-id="@sliders[i].Id"><img class="img-fluid" src="@sliders[i].Thumbnail" alt="@sliders[i].ProductName"></a>
								<div class="product-details">
									<h6>
										<a asp-action="Details" asp-controller="Product" asp-route-id="@sliders[i].Id">@sliders[i].ProductName</a>
									</h6>
									<div class="price">
										<h6>$ @sliders[i].Price</h6>
										@if (sliders[i].SalePrice > 0)
										{
											<h6 class="l-through">$ @sliders[i].SalePrice</h6>
										}
									</div>
									<div class="prd-bottom">
										<a href="" class="social-info">
											<span class="lnr lnr-heart"></span>
											<p class="hover-text">WishList</p>
										</a>
										<a href="" class="social-info">
											<span class="lnr lnr-sync"></span>
											<p class="hover-text">compare</p>
										</a>
										<a href="" class="social-info">
											<span class="lnr lnr-move"></span>
											<p class="hover-text">view more</p>
										</a>
									</div>
								</div>
							</div>
						</div>
					}
				}
			</div>
		</div>
	</div>
</section>

<!--================End Cart Area =================-->
<script type="text/javascript">

	$(document).ready(function () {
		$('select[id="province"]').niceSelect('destroy');
		$('select[id="ward"]').niceSelect('destroy');
		$('select[id="ddl-district"]').niceSelect('destroy'); //destroy the plugin
		var phoneNum = $('#receiver-phoneNumber');
		var address = $('#receiver-address');
		var saveBtn = $('[id*=save-details-btn]');
		var cancelBtn = $('[id*=cancel-save-btn]');
		if (phoneNum != undefined) {
			phoneNum.prop('disabled', true);
		}
		if (address != undefined) {
			address.prop('disabled', true);
		}
		if ($('[id*=save-details-btn]') != undefined) {
			$('[id*=save-details-btn]').hide();
		}
		if ($('[id*=cancel-save-btn]') != undefined) {
			$('[id*=cancel-save-btn]').hide();
		}
		$('select[id="province"]').hide();
		$('select[id="ward"]').hide();
		$('select[id="ddl-district"]').hide();
		$('#receiver-address-new').hide();
	});

	$('#update-details-btn').click(function () {
		$('#receiver-address').hide();
		$('#receiver-address-new').show();
		$('[id*=save-details-btn]').show();
		$(this).hide()
		$('select[id="province"]').show();
		$('select[id="ward"]').show();
		$('select[id="ddl-district"]').show();
		$('[id*=cancel-save-btn]').show();
	});

	$('[id*=save-details-btn]').click(function () {
		var province = $('select[id="province"] option:selected').val();
		var district = $('select[id="ddl-district"] option:selected').val();
		var ward = $('select[id="ward"] option:selected').val();
		if (province.trim() == 0 || province == null) {
			alert("Please choose Province");
			return false;
		}
		if (district.trim() == 0 || district == null) {
			alert("Please choose District");
			return false;
		}
		if (ward.trim() == 0 || ward == null) {
			alert("Please choose Ward");
			return false;
		}
		let provinceName = $('select[id="province"] option:selected').text();
		let districtName = $('select[id="ddl-district"] option:selected').text();
		let wardName = $('select[id="ward"] option:selected').text();
		var address = `${wardName}, ${districtName}, ${provinceName}`;
		$('#receiver-address-new').val(address);
		$('#receiver-address').val(address);
		$('#receiver-address').show();
		$('#receiver-address-new').hide();
		$('#update-details-btn').show();
		$('select[id="province"]').hide();
		$('select[id="ward"]').hide();
		$('select[id="ddl-district"]').hide();
		$(this).hide();
		$('[id*=cancel-save-btn]').hide();
	});

	$('[id*=cancel-save-btn]').click(function () {
		$('#update-details-btn').show();
		$('select[id="province"]').hide();
		$('select[id="ward"]').hide();
		$('select[id="ddl-district"]').hide();
		$(this).hide();
		$('#save-details-btn').hide();
		$('#receiver-address').show();
		$('#receiver-address-new').hide();
	});

	$("select[id=province]").change(function () {
		var value = $(this).val();
		$('select[id="ddl-district"]').empty();
		$('select[id="ddl-district"]').append($('<option>', {
			value: 0,
			text: "--District--"
		}));
		$('select[id="ward"]').empty();
		$('select[id="ward"]').append($('<option>', {
			value: 0,
			text: '--Ward--'
		}));
		$.ajax({
			type: "GET",
			url: "@Url.Action("GetDistrictByProvince", "Cart")",
			data: { provinceId: value },
			success: function (response) {
				for (let district of response) {
					$('select[id="ddl-district"]').append($('<option>', {
						value: district.id,
						text: district.districtName
					}));
				}
			},
			failure: function (failed) {
				$.toaster({ priority: 'warning', title: 'Warning', message: failed.responseText });
			},
			error: function (error) {
				alert(error.responseText)
				$.toaster({ priority: 'danger', title: 'Error', message: error.responseText });
			}
		});
	});

	$('select[id="ddl-district"]').change(function () {
		var value = $(this).val();
		$('select[id="ward"]').empty();
		$('select[id="ward"]').append($('<option>', {
			value: 0,
			text: '--Ward--'
		}));
		$.ajax({
			type: "GET",
			url: "@Url.Action("GetWardByDistrict", "Cart")",
			data: { districtId: value },
			success: function (response) {
				console.log(response);
				for (let ward of response) {
					$('select[id="ward"]').append($('<option>', {
						value: ward.id,
						text: ward.wardName
					}));
				}
			},
			failure: function (failed) {
				$.toaster({ priority: 'warning', title: 'Warning', message: failed.responseText });
			},
			error: function (error) {
				$.toaster({ priority: 'danger', title: 'Error', message: error.responseText });
			}
		});
	});

	function UpdateCart(id) {
		const data = {
			orderId: id,
			total: $("#sub-total-cost-" + id).text().split(' ')[1]
		};
		$.ajax({
			url: '@Url.Action("UpdateCart","Cart")',
			type: 'POST',
			data: data,
			success: function (response) {
				$.toaster({ priority: 'success', title: 'Created', message: "Update Cart Detail Successfully" });
				setTimeout(function () {
					window.location.reload();
				}, 1000);
			},
			failure: function (failed) {
				$.toaster({ priority: 'warning', title: 'Warning', message: failed.responseText });
			},
			error: function (error) {
				$.toaster({ priority: 'danger', title: 'Error', message: error.responseText });
			}
		});
	}

	function onMinusClick(event, orderDetailId, count) {
		var stringQ = $(event).closest("tr").find("input[name='qty']").val();
		var quantity = Number(stringQ);
		var newQuantity = quantity - 1;
		if (quantity == 1) {
			if (confirmDelete("Are you sure you want to remove this item from cart?")) {
				$.ajax({
					type: "POST",
					url: "@Url.Action("DeleteOrderDetail", "Cart")",
					data: { id: orderDetailId, quantity: newQuantity },
					success: function (response) {
						if (count == 1) {
							setTimeout(function () {
								window.location.reload();
							}, 1000);
						} else {
							$.toaster({ priority: 'success', title: 'Success', message: "Delete Cart Item Successfully" });
							$(event).closest("tr").remove();
						}
					},
					failure: function (failed) {
						$.toaster({ priority: 'warning', title: 'Warning', message: failed.responseText });
					},
					error: function (error) {
						$.toaster({ priority: 'danger', title: 'Error', message: error.responseText });
					}
				});
			}
		} else {
			$.ajax({
				type: "POST",
				url: "@Url.Action("UpdateQuantity", "Cart")",
				data: { id: orderDetailId, quantity: newQuantity },
				success: function (response) {
					$(event).closest("tr").find("input[name='qty']").val(newQuantity);
					var price = Number($(event).closest("tr").find("h5.price").text().split(' ')[1]);
					var total = Number.parseFloat(price * newQuantity).toFixed(2);
					$(event).closest("tr").find("h5.total").text("$ " + total);
				},
				failure: function (failed) {
					$.toaster({ priority: 'warning', title: 'Warning', message: failed.responseText });
				},
				error: function (error) {
					$.toaster({ priority: 'danger', title: 'Error', message: error.responseText });
				}
			});
		}
	}

	function onAddClick(event, max, orderDetailId) {
		var stringQ = $(event).closest("tr").find("input[name='qty']").val();
		var quantity = Number(stringQ);
		var newQuantity = quantity + 1;
		if (newQuantity > max) {
			$.toaster({ priority: 'warning', title: 'Warning', message: "There not enough item in the store" });
			return false;
		}
		$.ajax({
			type: "POST",
			url: "@Url.Action("UpdateQuantity", "Cart")",
			data: { id: orderDetailId, quantity: newQuantity },
			success: function (response) {
				$(event).closest("tr").find("input[name='qty']").val(newQuantity);
				var price = Number($(event).closest("tr").find("h5.price").text().split(' ')[1]);
				var total = Number.parseFloat(price * newQuantity).toFixed(2);
				$(event).closest("tr").find("h5.total").text("$ " + total);
			},
			failure: function (failed) {
				$.toaster({ priority: 'warning', title: 'Warning', message: failed.responseText });
			},
			error: function (error) {
				$.toaster({ priority: 'danger', title: 'Error', message: error.responseText });
			}
		});
	}

	function onQuantityChange(event, orderDetailId, max, count) {
		var newQuantity = Number(event.value);
		if (newQuantity > max) {
			$.toaster({ priority: 'warning', title: 'Warning', message: "There not enough item in the store" });
			return false;
		} else if (newQuantity < 0) {
			$.toaster({ priority: 'warning', title: 'Warning', message: "Please enter a positive number" });
			return false;
		} else if (newQuantity == 0) {
			if (confirmDelete("Changing to '0' means you will remove this item from cart? Are you sure?")) {
				$.ajax({
					type: "POST",
					url: "@Url.Action("DeleteOrderDetail", "Cart")",
					data: { id: orderDetailId, quantity: newQuantity },
					success: function (response) {
						if (count == 1) {
							setTimeout(function () {
								window.location.reload();
							}, 1000);
						} else {
							$.toaster({ priority: 'success', title: 'Success', message: "Delete Cart Item Successfully" });
							$(event).closest("tr").remove();
						}
					},
					failure: function (failed) {
						$.toaster({ priority: 'warning', title: 'Warning', message: failed.responseText });
					},
					error: function (error) {
						$.toaster({ priority: 'danger', title: 'Error', message: error.responseText });
					}
				});
			}
		} else {
			$.ajax({
				type: "POST",
				url: "@Url.Action("UpdateQuantity", "Cart")",
				data: { id: orderDetailId, quantity: newQuantity },
				success: function (response) {
					$(event).closest("tr").find("input[name='qty']").val(newQuantity);
					var price = Number($(event).closest("tr").find("h5.price").text().split(' ')[1]);
					var total = Number.parseFloat(price * newQuantity).toFixed(2);
					$(event).closest("tr").find("h5.total").text("$ " + total);
				},
				failure: function (failed) {
					$.toaster({ priority: 'warning', title: 'Warning', message: failed.responseText });
				},
				error: function (error) {
					$.toaster({ priority: 'danger', title: 'Error', message: error.responseText });
				}
			});
		}
	}

	function confirmDelete(message) {
		if (message == '' || message == null) {
			message = "Are you sure you want to delete this item?";
		}
		return confirm(message);
	}

	$('.numberonly').on("input", function (evt) {
		var self = $(this);
		self.val(self.val().replace(/[^0-9\.]/g, ''));
		if ((evt.which != 46 || self.val().indexOf('.') != -1) && (evt.which < 48 || evt.which > 57)) {
			evt.preventDefault();
		}
	});

	function ProceedToCheckOut(id) {
		const data = {
			orderId: id
		};
		$.ajax({
			url: '@Url.Action("ProcessToCheckout","Cart")',
			type: 'POST',
			data: data,
			success: function (response) {
				//$.toaster({ priority: 'success', title: 'Created', message: "Add To Cart Contact Successfully" });
				setTimeout(function () {
					window.location.href = "/cart/cartcontact/" + id;
				}, 1000);
			},
			failure: function (failed) {
				$.toaster({ priority: 'warning', title: 'Warning', message: failed.responseText });
			},
			error: function (error) {
				$.toaster({ priority: 'danger', title: 'Error', message: error.responseText });
			}
		});
	}


	function cancelCart(id) {
		const data = {
			orderId: id,
		};
		$.ajax({
			url: '@Url.Action("CancelCart","Cart")',
			type: 'POST',
			data: data,
			success: function (response) {
				$.toaster({ priority: 'success', title: 'Created', message: "Canceled Cart Successfully" });
				setTimeout(function () {
					window.location.reload();
				}, 1000);
			},
			failure: function (failed) {
				$.toaster({ priority: 'warning', title: 'Warning', message: failed.responseText });
			},
			error: function (error) {
				$.toaster({ priority: 'danger', title: 'Error', message: error.responseText });
			}
		});
	}
</script>
